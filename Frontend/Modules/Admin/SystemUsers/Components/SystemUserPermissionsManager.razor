@using Shared.Models.DTOs.UserPermissions
@using Shared.Models.QueryModels
@using Shared.Models.Responses
@using Radzen
@using Radzen.Blazor

@* ========================================
   ðŸ‘¤ SYSTEM USER PERMISSIONS MANAGER
   Componente para gestionar permisos directos de usuarios
   ======================================== *@

<RadzenStack Gap="1rem">
    
    @* Header con controles de bÃºsqueda y filtros *@
    <RadzenCard class="rz-shadow-0" Style="border: 1px solid var(--rz-border-color);">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
            
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
                <RadzenFormField Text="Buscar permisos" Variant="Variant.Outlined">
                    <Start>
                        <RadzenIcon Icon="search" />
                    </Start>
                    <ChildContent>
                        <RadzenTextBox @bind-Value="searchTerm" 
                                       Placeholder="Escriba para buscar..." 
                                       @oninput="OnSearchChanged"
                                       Style="width: 280px;" />
                    </ChildContent>
                </RadzenFormField>
                
                <RadzenFormField Text="Filtrar por grupo" Variant="Variant.Outlined">
                    <Start>
                        <RadzenIcon Icon="folder" />
                    </Start>
                    <ChildContent>
                        <RadzenDropDown @bind-Value="selectedGroup" 
                                       Data="@availableGroups" 
                                       TextProperty="@nameof(GroupOption.Text)"
                                       ValueProperty="@nameof(GroupOption.Value)"
                                       Placeholder="Todos los grupos"
                                       Change="OnGroupChanged"
                                       Style="width: 200px;" />
                    </ChildContent>
                </RadzenFormField>
                
                <RadzenCheckBox @bind-Value="showOnlyDirectlyAssigned" 
                               Name="showOnlyDirectlyAssigned"
                               TValue="bool"
                               Change="@OnShowOnlyDirectlyAssignedChanged" />
                <RadzenLabel Text="Solo permisos directos" Component="showOnlyDirectlyAssigned" Style="margin-left: 8px; font-weight: 500;" />
            </RadzenStack>
            
            <RadzenButton Text="Guardar Cambios" 
                         Icon="save" 
                         ButtonStyle="ButtonStyle.Primary"
                         Variant="Variant.Filled"
                         Size="ButtonSize.Medium"
                         Click="SavePermissions"
                         Disabled="@(!hasChanges || isLoading)"
                         Shade="Shade.Dark" />
        </RadzenStack>
    </RadzenCard>

    @* Loading state *@
    @if (isLoading)
    {
        <RadzenCard>
            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1rem" Style="padding: 2rem;">
                <RadzenProgressBarCircular ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large" />
                <RadzenText TextStyle="TextStyle.Body1" Style="color: var(--rz-text-secondary-color);">
                    Cargando permisos...
                </RadzenText>
            </RadzenStack>
        </RadzenCard>
    }
    else if (errorMessage != null)
    {
        <RadzenAlert AlertStyle="AlertStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter">
            <RadzenIcon Icon="error" Style="margin-right: 8px;" />
            @errorMessage
        </RadzenAlert>
    }
    else
    {
        @* Lista de permisos agrupada con paneles colapsables *@
        @if (groupedPermissions?.Any() == true)
        {
            @foreach (var group in groupedPermissions)
            {
                <RadzenPanel AllowCollapse="true" 
                            class="rz-my-2" 
                            Style="width: 100%;"
                            Expand="@(() => OnGroupExpanded(group.Key))" 
                            Collapse="@(() => OnGroupCollapsed(group.Key))"
                            Collapsed="@(!expandedGroups.Contains(group.Key))">
                    
                    <HeaderTemplate>
                        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                            <RadzenIcon Icon="folder_open" Style="color: var(--rz-primary);" />
                            <RadzenText TextStyle="TextStyle.H6" Style="margin: 0; color: var(--rz-text-primary-color); font-weight: 600;">
                                @group.Key
                            </RadzenText>
                            <RadzenBadge Text="@group.Count().ToString()" 
                                       BadgeStyle="BadgeStyle.Secondary" 
                                       Variant="Variant.Filled" />
                        </RadzenStack>
                    </HeaderTemplate>
                    
                    <ChildContent>
                        <RadzenStack Gap="0.5rem" Style="padding-top: 1rem;">
                            @foreach (var permission in group)
                            {
                                <RadzenCard Variant="Variant.Outlined" 
                                           class="@($"permission-item {GetPermissionStatusClass(permission)}")"
                                           Style="@GetPermissionItemStyle(permission)">
                                    <RadzenRow AlignItems="AlignItems.Start" Gap="1rem">
                                        
                                        @* Switch del permiso (solo para permisos directos) o Badge heredado *@
                                        <RadzenColumn SizeXS="1" Style="display: flex; align-items: flex-start; padding-top: 4px;">
                                            @if (permission.IsInheritedFromRole && !permission.IsDirectlyAssigned)
                                            {
                                                @* Solo heredado - mostrar badge clickeable *@
                                                <RadzenButton ButtonStyle="ButtonStyle.Info" 
                                                            Variant="Variant.Filled" 
                                                            Size="ButtonSize.ExtraSmall"
                                                            Text="Heredado"
                                                            Icon="info"
                                                            Click="@(() => ShowInheritedRolesModal(permission))"
                                                            Style="font-size: 10px; padding: 4px 8px;"
                                                            title="Ver roles que otorgan este permiso" />
                                            }
                                            else
                                            {
                                                @* Switch normal para permisos directos *@
                                                <RadzenSwitch @bind-Value="permission.IsDirectlyAssigned"
                                                             Change="@((bool value) => TogglePermission(permission, value))"
                                                             Disabled="@(!CanModifyPermission(permission))" />
                                            }
                                        </RadzenColumn>

                                        @* InformaciÃ³n del permiso *@
                                        <RadzenColumn SizeXS="11">
                                            <RadzenStack Gap="0.25rem">
                                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Wrap="FlexWrap.Wrap">
                                                    <RadzenText TextStyle="TextStyle.Subtitle1" Style="font-weight: 600; margin: 0;">
                                                        @permission.Nombre
                                                    </RadzenText>
                                                    
                                                    @* Badges de estado *@
                                                    @if (permission.IsDirectlyAssigned)
                                                    {
                                                        <RadzenBadge Text="Directo" 
                                                                   BadgeStyle="BadgeStyle.Success" 
                                                                   Variant="Variant.Filled"
                                                                   Style="font-size: 10px;" />
                                                    }
                                                    @if (permission.IsInheritedFromRole)
                                                    {
                                                        <RadzenBadge Text="@($"Heredado ({permission.InheritedFromRoles.Count} roles)")" 
                                                                   BadgeStyle="BadgeStyle.Info" 
                                                                   Variant="Variant.Filled"
                                                                   Style="font-size: 10px; cursor: pointer;"
                                                                   title="@($"Clic para ver roles: {string.Join(", ", permission.InheritedFromRoles)}")"
                                                                   @onclick="@(() => ShowInheritedRolesModal(permission))" />
                                                    }
                                                    
                                                    @* Indicadores de cambios pendientes *@
                                                    @if (HasPendingChange(permission))
                                                    {
                                                        @if (pendingChanges.PermissionsToAdd.Any(p => p.PermissionId == permission.PermissionId))
                                                        {
                                                            <RadzenBadge BadgeStyle="BadgeStyle.Warning" 
                                                                       Variant="Variant.Filled"
                                                                       Style="font-size: 10px;">
                                                                <RadzenIcon Icon="add" Style="margin-right: 4px;" />
                                                                Pendiente: Agregar
                                                            </RadzenBadge>
                                                        }
                                                        @if (pendingChanges.PermissionsToRemove.Any(p => p.PermissionId == permission.PermissionId))
                                                        {
                                                            <RadzenBadge BadgeStyle="BadgeStyle.Danger" 
                                                                       Variant="Variant.Filled"
                                                                       Style="font-size: 10px;">
                                                                <RadzenIcon Icon="remove" Style="margin-right: 4px;" />
                                                                Pendiente: Remover
                                                            </RadzenBadge>
                                                        }
                                                    }
                                                </RadzenStack>
                                                
                                                @* DescripciÃ³n *@
                                                @if (!string.IsNullOrEmpty(permission.Descripcion))
                                                {
                                                    <RadzenText TextStyle="TextStyle.Body2" 
                                                               Style="color: var(--rz-text-secondary-color); margin: 0; line-height: 1.4;">
                                                        @permission.Descripcion
                                                    </RadzenText>
                                                }
                                                
                                                @* Info de herencia *@
                                                @if (permission.IsInheritedFromRole && permission.InheritedFromRoles.Any())
                                                {
                                                    <RadzenText TextStyle="TextStyle.Caption" 
                                                               Style="color: var(--rz-info); margin: 0; font-style: italic;">
                                                        Heredado de roles: @string.Join(", ", permission.InheritedFromRoles)
                                                    </RadzenText>
                                                }
                                            </RadzenStack>
                                        </RadzenColumn>
                                    </RadzenRow>
                                </RadzenCard>
                            }
                        </RadzenStack>
                    </ChildContent>
                </RadzenPanel>
            }
        }
        else
        {
            <RadzenCard>
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1rem" Style="padding: 3rem;">
                    <RadzenIcon Icon="search_off" Style="font-size: 4rem; color: var(--rz-text-disabled-color);" />
                    <RadzenText TextStyle="TextStyle.H6" Style="color: var(--rz-text-secondary-color); text-align: center;">
                        No se encontraron permisos con los criterios de bÃºsqueda
                    </RadzenText>
                    <RadzenText TextStyle="TextStyle.Body2" Style="color: var(--rz-text-disabled-color); text-align: center;">
                        Intenta modificar los filtros o el tÃ©rmino de bÃºsqueda
                    </RadzenText>
                </RadzenStack>
            </RadzenCard>
        }

        @* PaginaciÃ³n *@
        @if (pagedResult != null && pagedResult.TotalCount > pageSize)
        {
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Style="margin-top: 2rem;">
                <RadzenPager Count="@totalPages" 
                            Page="@currentPage" 
                            PageChanged="@(async (args) => await OnPageChanged(args.PageIndex + 1))"
                            ShowPagingSummary="true"
                            PagingSummaryFormat="Mostrando pÃ¡gina {0} de {1} ({2} permisos en total)" />
            </RadzenStack>
        }

        @* Resumen de cambios pendientes *@
        @if (hasChanges)
        {
            <RadzenCard Style="border-left: 4px solid var(--rz-warning); background: var(--rz-warning-lighter);">
                <RadzenStack Gap="1rem">
                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                        <RadzenIcon Icon="pending" Style="color: var(--rz-warning-dark);" />
                        <RadzenText TextStyle="TextStyle.H6" Style="margin: 0; color: var(--rz-warning-dark);">
                            Cambios Pendientes en Permisos Directos (@(pendingChanges.PermissionsToAdd.Count + pendingChanges.PermissionsToRemove.Count))
                        </RadzenText>
                    </RadzenStack>
                    
                    <RadzenRow Gap="1rem">
                        @if (pendingChanges.PermissionsToAdd.Any())
                        {
                            <RadzenColumn SizeXS="6" SizeMD="6" SizeSM="12">
                                <RadzenStack Gap="0.5rem">
                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                        <RadzenIcon Icon="add_circle" Style="color: var(--rz-success);" />
                                        <RadzenText TextStyle="TextStyle.Subtitle2" Style="color: var(--rz-success); margin: 0; font-weight: 600;">
                                            Agregar Directamente (@pendingChanges.PermissionsToAdd.Count)
                                        </RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Gap="0.25rem" Style="margin-left: 1.5rem;">
                                        @foreach (var perm in pendingChanges.PermissionsToAdd.Take(3))
                                        {
                                            <RadzenText TextStyle="TextStyle.Body2" Style="margin: 0;">
                                                â€¢ @perm.Nombre
                                            </RadzenText>
                                        }
                                        @if (pendingChanges.PermissionsToAdd.Count > 3)
                                        {
                                            <RadzenText TextStyle="TextStyle.Body2" Style="color: var(--rz-text-secondary-color); margin: 0;">
                                                â€¢ ... y @(pendingChanges.PermissionsToAdd.Count - 3) mÃ¡s
                                            </RadzenText>
                                        }
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenColumn>
                        }
                        @if (pendingChanges.PermissionsToRemove.Any())
                        {
                            <RadzenColumn SizeXS="6" SizeMD="6" SizeSM="12">
                                <RadzenStack Gap="0.5rem">
                                    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                        <RadzenIcon Icon="remove_circle" Style="color: var(--rz-danger);" />
                                        <RadzenText TextStyle="TextStyle.Subtitle2" Style="color: var(--rz-danger); margin: 0; font-weight: 600;">
                                            Remover Directos (@pendingChanges.PermissionsToRemove.Count)
                                        </RadzenText>
                                    </RadzenStack>
                                    <RadzenStack Gap="0.25rem" Style="margin-left: 1.5rem;">
                                        @foreach (var perm in pendingChanges.PermissionsToRemove.Take(3))
                                        {
                                            <RadzenText TextStyle="TextStyle.Body2" Style="margin: 0;">
                                                â€¢ @perm.Nombre
                                            </RadzenText>
                                        }
                                        @if (pendingChanges.PermissionsToRemove.Count > 3)
                                        {
                                            <RadzenText TextStyle="TextStyle.Body2" Style="color: var(--rz-text-secondary-color); margin: 0;">
                                                â€¢ ... y @(pendingChanges.PermissionsToRemove.Count - 3) mÃ¡s
                                            </RadzenText>
                                        }
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenColumn>
                        }
                    </RadzenRow>
                </RadzenStack>
            </RadzenCard>
        }
    }
</RadzenStack>

<style>
    .permission-item {
        transition: all 0.2s ease;
        cursor: pointer;
    }
    
    .permission-direct-only {
        background: linear-gradient(145deg, var(--rz-success-lighter), var(--rz-base-50));
        border-color: var(--rz-success-light);
    }
    
    .permission-inherited-only {
        background: linear-gradient(145deg, var(--rz-info-lighter), var(--rz-base-50));
        border-color: var(--rz-info-light);
        position: relative;
    }
    
    .permission-inherited-only::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: repeating-linear-gradient(
            45deg,
            transparent,
            transparent 10px,
            rgba(var(--rz-info-rgb), 0.1) 10px,
            rgba(var(--rz-info-rgb), 0.1) 20px
        );
        pointer-events: none;
        border-radius: inherit;
    }
    
    .permission-both {
        background: linear-gradient(145deg, var(--rz-primary-lighter), var(--rz-base-50));
        border-color: var(--rz-primary-light);
    }
    
    .permission-none {
        background: var(--rz-base-50);
    }
    
    .permission-item:hover {
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transform: translateY(-1px);
    }

    .rz-switch {
        flex-shrink: 0;
    }
</style>