@using Shared.Models.DTOs.UserPermissions
@using Shared.Models.QueryModels
@using Shared.Models.Responses
@using Radzen
@using Radzen.Blazor

@* ========================================
   ðŸ‘¥ PERMISSION USERS MANAGER
   Componente para gestionar usuarios que tienen un permiso
   ======================================== *@

<RadzenStack Gap="1rem">
    
    @* Mensaje de solo lectura *@
    @if (!CanEdit)
    {
        <RadzenAlert AlertStyle="AlertStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter">
            <RadzenIcon Icon="visibility" Style="margin-right: 8px;" />
            EstÃ¡s viendo los usuarios en modo solo lectura. Necesitas permisos de ediciÃ³n para realizar cambios.
        </RadzenAlert>
    }

    <RadzenCard class="rz-shadow-0" Style="border: 1px solid var(--rz-border-color);">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
            
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem" Wrap="FlexWrap.Wrap">
                <RadzenFormField Text="Buscar usuarios" Variant="Variant.Outlined">
                    <Start>
                        <RadzenIcon Icon="search" />
                    </Start>
                    <ChildContent>
                        <RadzenTextBox @bind-Value="searchTerm" 
                                       Placeholder="Escriba para buscar..." 
                                       @oninput="OnSearchChanged"
                                       Style="width: 280px;" />
                    </ChildContent>
                </RadzenFormField>
                
                <RadzenCheckBox @bind-Value="showOnlyWithPermission" 
                               Name="showOnlyWithPermission"
                               TValue="bool"
                               Change="@OnShowOnlyWithPermissionChanged" />
                <RadzenLabel Text="Solo usuarios con el permiso" Component="showOnlyWithPermission" Style="margin-left: 8px; font-weight: 500;" />
            </RadzenStack>
            
            <RadzenButton Text="Asignar a Usuario" 
                         Icon="person_add" 
                         ButtonStyle="ButtonStyle.Success"
                         Variant="Variant.Filled"
                         Size="ButtonSize.Medium"
                         Click="ShowAddUserModal"
                         Disabled="@(!CanEdit || isLoading)"
                         Shade="Shade.Dark" />
        </RadzenStack>
    </RadzenCard>

    @* Loading state *@
    @if (isLoading)
    {
        <RadzenCard>
            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1rem" Style="padding: 2rem;">
                <RadzenProgressBarCircular ShowValue="false" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large" />
                <RadzenText TextStyle="TextStyle.Body1" Style="color: var(--rz-text-secondary-color);">
                    Cargando usuarios...
                </RadzenText>
            </RadzenStack>
        </RadzenCard>
    }
    else if (errorMessage != null)
    {
        <RadzenAlert AlertStyle="AlertStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter">
            <RadzenIcon Icon="error" Style="margin-right: 8px;" />
            @errorMessage
        </RadzenAlert>
    }
    else
    {
        @* Lista de usuarios *@
        @if (permissionUsers?.Any() == true)
        {
            <RadzenStack Gap="0.5rem">
                @foreach (var user in permissionUsers)
                {
                    <RadzenCard Variant="Variant.Outlined" 
                               class="@($"user-item {(user.HasPermission ? "user-with-permission" : "user-without-permission")}")"
                               Style="@GetUserItemStyle(user)">
                        <RadzenRow AlignItems="AlignItems.Center" Gap="1rem">
                            
                            @* Avatar y nombre del usuario *@
                            <RadzenColumn SizeXS="8">
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.75rem">
                                    <RadzenIcon Icon="account_circle" Style="font-size: 2.5rem; color: var(--rz-primary);" />
                                    <RadzenStack Gap="0.25rem">
                                        <RadzenText TextStyle="TextStyle.Subtitle1" Style="font-weight: 600; margin: 0;">
                                            @user.Nombre
                                        </RadzenText>
                                        @if (!string.IsNullOrEmpty(user.Email))
                                        {
                                            <RadzenText TextStyle="TextStyle.Body2" Style="color: var(--rz-text-secondary-color); margin: 0;">
                                                @user.Email
                                            </RadzenText>
                                        }
                                        <RadzenText TextStyle="TextStyle.Caption" Style="color: var(--rz-text-disabled-color); margin: 0;">
                                            ID: @user.UserId
                                        </RadzenText>
                                        @if (user.IsInheritedFromRole && user.InheritedFromRoles.Any())
                                        {
                                            <RadzenText TextStyle="TextStyle.Caption" Style="color: var(--rz-info); margin: 0;">
                                                Heredado de: @string.Join(", ", user.InheritedFromRoles)
                                            </RadzenText>
                                        }
                                    </RadzenStack>
                                </RadzenStack>
                            </RadzenColumn>

                            @* Estado y acciones *@
                            <RadzenColumn SizeXS="4" Style="text-align: right;">
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" JustifyContent="JustifyContent.End">
                                    @if (user.IsDirectlyAssigned)
                                    {
                                        <RadzenBadge Text="Directo" 
                                                   BadgeStyle="BadgeStyle.Success" 
                                                   Variant="Variant.Filled" />
                                        
                                        <RadzenButton Icon="person_remove" 
                                                     ButtonStyle="ButtonStyle.Danger"
                                                     Variant="Variant.Outlined"
                                                     Size="ButtonSize.Small"
                                                     Click="@(() => ShowRemovePermissionModal(user))"
                                                     Disabled="@(!CanEdit)"
                                                     title="Remover permiso directo" />
                                    }
                                    else if (user.IsInheritedFromRole)
                                    {
                                        <RadzenBadge Text="Heredado" 
                                                   BadgeStyle="BadgeStyle.Info" 
                                                   Variant="Variant.Outlined" />
                                        
                                        <RadzenButton Icon="person_add" 
                                                     ButtonStyle="ButtonStyle.Success"
                                                     Variant="Variant.Outlined"
                                                     Size="ButtonSize.Small"
                                                     Click="@(() => ShowAssignPermissionModal(user))"
                                                     Disabled="@(!CanEdit)"
                                                     title="Asignar permiso directo" />
                                    }
                                    else
                                    {
                                        <RadzenBadge Text="Sin permiso" 
                                                   BadgeStyle="BadgeStyle.Light" 
                                                   Variant="Variant.Outlined" />
                                        
                                        <RadzenButton Icon="person_add" 
                                                     ButtonStyle="ButtonStyle.Success"
                                                     Variant="Variant.Outlined"
                                                     Size="ButtonSize.Small"
                                                     Click="@(() => ShowAssignPermissionModal(user))"
                                                     Disabled="@(!CanEdit)"
                                                     title="Asignar permiso" />
                                    }
                                </RadzenStack>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenCard>
                }
            </RadzenStack>
        }
        else
        {
            @if (showOnlyWithPermission)
            {
                <RadzenCard>
                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1.5rem" Style="padding: 3rem;">
                        <RadzenIcon Icon="person_add" Style="font-size: 4rem; color: var(--rz-primary-light);" />
                        <RadzenText TextStyle="TextStyle.H6" Style="color: var(--rz-text-secondary-color); text-align: center;">
                            No hay usuarios con este permiso
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" Style="color: var(--rz-text-disabled-color); text-align: center; max-width: 400px;">
                            Haz clic en "Asignar a Usuario" para empezar a asignar este permiso
                        </RadzenText>
                        @if (CanEdit)
                        {
                            <RadzenButton Text="Asignar a Usuario" 
                                         Icon="person_add" 
                                         ButtonStyle="ButtonStyle.Success"
                                         Variant="Variant.Filled"
                                         Size="ButtonSize.Medium"
                                         Click="ShowAddUserModal"
                                         Style="margin-top: 1rem;" />
                        }
                    </RadzenStack>
                </RadzenCard>
            }
            else
            {
                <RadzenCard>
                    <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="1rem" Style="padding: 3rem;">
                        <RadzenIcon Icon="search_off" Style="font-size: 4rem; color: var(--rz-text-disabled-color);" />
                        <RadzenText TextStyle="TextStyle.H6" Style="color: var(--rz-text-secondary-color); text-align: center;">
                            No se encontraron usuarios con los criterios de bÃºsqueda
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" Style="color: var(--rz-text-disabled-color); text-align: center;">
                            Intenta modificar los filtros o el tÃ©rmino de bÃºsqueda
                        </RadzenText>
                    </RadzenStack>
                </RadzenCard>
            }
        }

        @* PaginaciÃ³n *@
        @if (pagedResult != null && pagedResult.TotalCount > pageSize)
        {
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Style="margin-top: 2rem;">
                <RadzenPager Count="@totalPages" 
                            Page="@currentPage" 
                            PageChanged="@(async (args) => await OnPageChanged(args.PageIndex + 1))"
                            ShowPagingSummary="true"
                            PagingSummaryFormat="Mostrando pÃ¡gina {0} de {1} ({2} usuarios en total)" />
            </RadzenStack>
        }
    }
</RadzenStack>

<style>
    .user-item {
        transition: all 0.2s ease;
        cursor: pointer;
    }
    
    .user-with-permission {
        background: linear-gradient(145deg, var(--rz-success-lighter), var(--rz-base-50));
        border-color: var(--rz-success-light);
    }
    
    .user-without-permission {
        background: var(--rz-base-50);
    }
    
    .user-item:hover {
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transform: translateY(-1px);
    }
</style>