<div class="essential-item">
    <div class="essential-label">@Label</div>
    <div class="essential-value @(IsLink ? "link" : "")" @onclick="HandleClick">
        @Value
    </div>
</div>

@code {
    [Parameter] public string Label { get; set; } = "";
    [Parameter] public string Value { get; set; } = "";
    [Parameter] public bool IsLink { get; set; } = false;
    [Parameter] public EventCallback OnLinkClick { get; set; }

    private async Task HandleClick()
    {
        if (IsLink && OnLinkClick.HasDelegate)
        {
            await OnLinkClick.InvokeAsync();
        }
    }
}

<style>
    .essential-item {
        display: flex;
        flex-direction: column;
    }

    .essential-label {
        font-size: 12px;
        color: #605e5c;
        margin-bottom: 4px;
        font-weight: 400;
    }

    body.dark-theme .essential-label,
    [data-theme="dark"] .essential-label {
        color: #a0a0a0;
    }

    .essential-value {
        font-size: 13px;
        color: #323130;
        font-weight: 400;
    }

    body.dark-theme .essential-value,
    [data-theme="dark"] .essential-value {
        color: #e1e1e1;
    }

    .essential-value.link {
        color: #0078d4;
        cursor: pointer;
    }

    body.dark-theme .essential-value.link,
    [data-theme="dark"] .essential-value.link {
        color: #58a6ff;
    }

    .essential-value.link:hover {
        text-decoration: underline;
    }
</style>